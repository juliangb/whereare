<?php
/**
 * Implement hook_install().
 */
function whereare_install() {
  // Site level config:
  variable_set('site_frontpage', 'map');
  
  // Set default theme to Bootstrap:
  $theme = 'bootstrap';
  theme_enable(array('bootstrap'));
  variable_set('theme_default', $theme);
  
  // Configure theme:
  $theme_variable = 'theme_settings';
  $theme_settings = variable_get($theme_variable, array());
  
  $theme_settings['toggle_logo'] = 0;
  $theme_settings['toggle_favicon'] = 0;
  
  variable_set($theme_variable, $theme_settings);

  // Configure Google Adsense
  variable_set('adsense_basic_id', 'pub-2835981570956339');
  variable_set('adsense_id_module', 'adsense_basic');
  variable_set('adsense_managed_ad_block_0', 'Adsense+Responsive:responsive:2560638657:center:auto');
  variable_set('adsense_managed_async', 1);
  variable_set('adsense_managed_number_blocks', '1');
  
  // Configure Google Analytics
  // UA-60564319-1
  
  // Create date field:
  field_create_field(array(
    'translatable' => '0',
    'entity_types' => array(),
    'settings' => array(
      'granularity' => array(
        'month' => 'month',
        'day' => 'day',
        'year' => 'year',
        'hour' => 0,
        'minute' => 0,
        'second' => 0,
      ),
      'tz_handling' => 'none',
      'timezone_db' => '',
      'cache_enabled' => 0,
      'cache_count' => '4',
      'todate' => 'optional',
    ),
    'storage' => array(
      'type' => 'field_sql_storage',
      'settings' => array(),
      'module' => 'field_sql_storage',
      'active' => '1',
      'details' => array(
        'sql' => array(
          'FIELD_LOAD_CURRENT' => array(
            'field_data_field_date2' => array(
              'value' => 'field_date2_value',
              'value2' => 'field_date2_value2',
            ),
          ),
          'FIELD_LOAD_REVISION' => array(
            'field_revision_field_date2' => array(
              'value' => 'field_date2_value',
              'value2' => 'field_date2_value2',
            ),
          ),
        ),
      ),
    ),
    'foreign keys' => array(),
    'indexes' => array(),
    'field_name' => 'field_date',
    'type' => 'datetime',
    'module' => 'date',
    'active' => '1',
    'locked' => '0',
    'cardinality' => '1',
    'deleted' => '0',
    'columns' => array(
      'value' => array(
        'type' => 'datetime',
        'mysql_type' => 'datetime',
        'pgsql_type' => 'timestamp without time zone',
        'sqlite_type' => 'varchar',
        'sqlsrv_type' => 'smalldatetime',
        'not null' => FALSE,
        'sortable' => TRUE,
        'views' => TRUE,
      ),
      'value2' => array(
        'type' => 'datetime',
        'mysql_type' => 'datetime',
        'pgsql_type' => 'timestamp without time zone',
        'sqlite_type' => 'varchar',
        'sqlsrv_type' => 'smalldatetime',
        'not null' => FALSE,
        'sortable' => TRUE,
        'views' => FALSE,
      ),
    ),
    'bundles' => array(
      'node' => array(
        'plan',
      ),
    ),
  ));
  
  // Create image field:
  field_create_field(array(
    'field_name' => 'field_image',
    'type' => 'image',
    'cardinality' => 0,
    'locked' => FALSE,
    'indexes' => array('fid' => array('fid')),
    'settings' => array(
      'uri_scheme' => 'public',
    ),
  ));
  
  // Create geofield:
  field_create_field(array(
    'translatable' => '0',
    'entity_types' => array(),
    'settings' => array(
      'backend' => 'default',
      'srid' => '4326',
    ),
    'storage' => array(
      'type' => 'field_sql_storage',
      'settings' => array(),
      'module' => 'field_sql_storage',
      'active' => '1',
      'details' => array(
        'sql' => array(
          'FIELD_LOAD_CURRENT' => array(
            'field_data_field_location' => array(
              'geom' => 'field_location_geom',
              'geo_type' => 'field_location_geo_type',
              'lat' => 'field_location_lat',
              'lon' => 'field_location_lon',
              'left' => 'field_location_left',
              'top' => 'field_location_top',
              'right' => 'field_location_right',
              'bottom' => 'field_location_bottom',
              'geohash' => 'field_location_geohash',
            ),
          ),
          'FIELD_LOAD_REVISION' => array(
            'field_revision_field_location' => array(
              'geom' => 'field_location_geom',
              'geo_type' => 'field_location_geo_type',
              'lat' => 'field_location_lat',
              'lon' => 'field_location_lon',
              'left' => 'field_location_left',
              'top' => 'field_location_top',
              'right' => 'field_location_right',
              'bottom' => 'field_location_bottom',
              'geohash' => 'field_location_geohash',
            ),
          ),
        ),
      ),
    ),
    'foreign keys' => array(),
    'indexes' => array(
      'lat' => array(
        'lat',
      ),
      'lon' => array(
        'lon',
      ),
      'top' => array(
        'top',
      ),
      'bottom' => array(
        'bottom',
      ),
      'left' => array(
        'left',
      ),
      'right' => array(
        'right',
      ),
      'geohash' => array(
        'geohash',
      ),
      'centroid' => array(
        'lat',
        'lon',
      ),
      'bbox' => array(
        'top',
        'bottom',
        'left',
        'right',
      ),
    ),
    'field_name' => 'field_location',
    'type' => 'geofield',
    'module' => 'geofield',
    'active' => '1',
    'locked' => '0',
    'cardinality' => '1',
    'deleted' => '0',
    'columns' => array(
      'geom' => array(
        'type' => 'blob',
        'size' => 'big',
        'not null' => FALSE,
      ),
      'geo_type' => array(
        'type' => 'varchar',
        'default' => '',
        'length' => 64,
      ),
      'lat' => array(
        'type' => 'numeric',
        'precision' => 18,
        'scale' => 12,
        'not null' => FALSE,
      ),
      'lon' => array(
        'type' => 'numeric',
        'precision' => 18,
        'scale' => 12,
        'not null' => FALSE,
      ),
      'left' => array(
        'type' => 'numeric',
        'precision' => 18,
        'scale' => 12,
        'not null' => FALSE,
      ),
      'top' => array(
        'type' => 'numeric',
        'precision' => 18,
        'scale' => 12,
        'not null' => FALSE,
      ),
      'right' => array(
        'type' => 'numeric',
        'precision' => 18,
        'scale' => 12,
        'not null' => FALSE,
      ),
      'bottom' => array(
        'type' => 'numeric',
        'precision' => 18,
        'scale' => 12,
        'not null' => FALSE,
      ),
      'geohash' => array(
        'type' => 'varchar',
        'length' => 16,
        'not null' => FALSE,
      ),
    ),
    'bundles' => array(
      'node' => array(
        'note',
      ),
    ),
  ));


  
  // Create "Note" content type:
  $type = array(
    'type' => 'note',
    'name' => st('Note'),
    'base' => 'node_content',
  );

  // Don't display author information on teasers:
  variable_set('node_submitted_note', FALSE);
  // Set path pattern:
  variable_set('pathauto_node_note_pattern', 'note/[node:title]');
  
  $type = node_type_set_defaults($type);
  node_type_save($type);
  node_add_body_field($type);
  
  // Create date instance:
  field_create_instance(array(
    'label' => 'Date',
    'widget' => array(
      'weight' => '32',
      'type' => 'date_select',
      'module' => 'date',
      'active' => 1,
      'settings' => array(
        'input_format' => 'm/d/Y - H:i:s',
        'input_format_custom' => '',
        'year_range' => '-3:+3',
        'increment' => '15',
        'label_position' => 'above',
        'text_parts' => array(),
      ),
    ),
    'settings' => array(
      'default_value' => 'now',
      'default_value_code' => '',
      'default_value2' => 'same',
      'default_value_code2' => '',
      'user_register_form' => FALSE,
    ),
    'display' => array(
      'default' => array(
        'label' => 'above',
        'type' => 'date_default',
        'settings' => array(
          'format_type' => 'long',
          'multiple_number' => '',
          'multiple_from' => '',
          'multiple_to' => '',
          'fromto' => 'both',
        ),
        'module' => 'date',
        'weight' => 1,
      ),
      'teaser' => array(
        'type' => 'hidden',
        'label' => 'above',
        'settings' => array(),
        'weight' => 0,
      ),
    ),
    'required' => 0,
    'description' => '',
    'field_name' => 'field_date',
    'entity_type' => 'node',
    'bundle' => 'note',
    'deleted' => '0',
  ));


  // Many of the following values will be defaulted, they're included here as an illustrative examples.
  // See http://api.drupal.org/api/function/field_create_instance/7
  field_create_instance(array(
    'field_name' => 'field_image',
    'entity_type' => 'node',
    'label' => 'Image',
    'bundle' => 'note',
    'required' => FALSE,
    'settings' => array(
      'file_directory' => 'field/image',
      'file_extensions' => 'png gif jpg jpeg',
      'max_filesize' => '',
      'max_resolution' => '',
      'min_resolution' => '',
      'alt_field' => TRUE,
      'title_field' => '',
    ),
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'image',
        'settings' => array(
          'image_style' => 'large',
          'image_link' => '',
        ),
        'weight' => -1,
      ),
      'teaser' => array(
        'label' => 'hidden',
        'type' => 'image',
        'settings' => array(
          'image_style' => 'medium',
          'image_link' => 'content',
        ),
        'weight' => -1,
      ),
    ),
  ));
  
  field_create_instance(array(
    'label' => 'Location',
    'widget' => array(
      'weight' => '33',
      'type' => 'geocoder',
      'module' => 'geocoder',
      'active' => 1,
      'settings' => array(
        'geocoder_field' => 'title',
        'geocoder_handler' => 'google',
        'handler_settings' => array(
          'google' => array(
            'geometry_type' => 'point',
            'all_results' => 0,
            'reject_results' => array(
              'APPROXIMATE' => 0,
              'GEOMETRIC_CENTER' => 0,
              'RANGE_INTERPOLATED' => 0,
              'ROOFTOP' => 0,
            ),
          ),
        ),
        'delta_handling' => 'default',
      ),
    ),
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'geofield_openlayers',
        'settings' => array(
          'data' => 'full',
        ),
        'module' => 'geofield',
        'weight' => 1,
      ),
      'teaser' => array(
        'type' => 'hidden',
        'label' => 'geofield_openlayers',
        'settings' => array(),
        'weight' => 0,
      ),
    ),
    'required' => 0,
    'description' => '',
    'field_name' => 'field_location',
    'entity_type' => 'node',
    'bundle' => 'note',
    'deleted' => '0',
  ));
  
  // Create "Plan" content type:
  $type = array(
    'type' => 'plan',
    'name' => st('Plan'),
    'base' => 'node_content',
  );
  
  // Don't display author information on teasers:
  variable_set('node_submitted_plan', FALSE);
  // Set path pattern:
  variable_set('pathauto_node_plan_pattern', 'plan/[node:title]');
  
  $type = node_type_set_defaults($type);
  node_type_save($type);
  node_add_body_field($type);
  
  // Create date instance:
  field_create_instance(array(
    'label' => 'Date',
    'widget' => array(
      'weight' => '32',
      'type' => 'date_select',
      'module' => 'date',
      'active' => 1,
      'settings' => array(
        'input_format' => 'm/d/Y - H:i:s',
        'input_format_custom' => '',
        'year_range' => '-3:+3',
        'increment' => '15',
        'label_position' => 'above',
        'text_parts' => array(),
      ),
    ),
    'settings' => array(
      'default_value' => 'now',
      'default_value_code' => '',
      'default_value2' => 'same',
      'default_value_code2' => '',
      'user_register_form' => FALSE,
    ),
    'display' => array(
      'default' => array(
        'label' => 'above',
        'type' => 'date_default',
        'settings' => array(
          'format_type' => 'long',
          'multiple_number' => '',
          'multiple_from' => '',
          'multiple_to' => '',
          'fromto' => 'both',
        ),
        'module' => 'date',
        'weight' => 1,
      ),
      'teaser' => array(
        'type' => 'hidden',
        'label' => 'above',
        'settings' => array(),
        'weight' => 0,
      ),
    ),
    'required' => 0,
    'description' => '',
    'field_name' => 'field_date',
    'entity_type' => 'node',
    'bundle' => 'plan',
    'deleted' => '0',
  ));
  
  field_create_instance(array(
    'label' => 'Location',
    'widget' => array(
      'weight' => '33',
      'type' => 'geocoder',
      'module' => 'geocoder',
      'active' => 1,
      'settings' => array(
        'geocoder_field' => 'title',
        'geocoder_handler' => 'google',
        'handler_settings' => array(
          'google' => array(
            'geometry_type' => 'point',
            'all_results' => 0,
            'reject_results' => array(
              'APPROXIMATE' => 0,
              'GEOMETRIC_CENTER' => 0,
              'RANGE_INTERPOLATED' => 0,
              'ROOFTOP' => 0,
            ),
          ),
        ),
        'delta_handling' => 'default',
      ),
    ),
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'geofield_openlayers',
        'settings' => array(
          'data' => 'full',
        ),
        'module' => 'geofield',
        'weight' => 1,
      ),
      'teaser' => array(
        'type' => 'geofield_openlayers',
        'label' => 'hidden',
        'settings' => array(),
        'weight' => 0,
      ),
    ),
    'required' => 0,
    'description' => '',
    'field_name' => 'field_location',
    'entity_type' => 'node',
    'bundle' => 'plan',
    'deleted' => '0',
  ));
  
  // Create "Plan" content:
  whereare_createnode('Plan', 'London, United Kingdom (Depart home)', date_create('2015-04-09'));
  whereare_createnode('Plan', 'Istanbul, Turkey',                     date_create('2015-04-19'));
  whereare_createnode('Plan', 'Georgia',                              date_create('2015-04-24'));
  whereare_createnode('Plan', 'Azerbaijan',                           date_create('2015-05-02'));
  whereare_createnode('Plan', 'Uzbekistan',                           date_create('2015-05-20'));
  whereare_createnode('Plan', 'Taijikistan',                          date_create('2015-05-27'));
  whereare_createnode('Plan', 'Pakistan',                             date_create('2015-06-30'));
  whereare_createnode('Plan', 'India',                                date_create('2015-07-13'));
  whereare_createnode('Plan', 'Nepal',                                date_create('2015-08-13'));
  whereare_createnode('Plan', 'China',                                date_create('2015-11-01'));
  whereare_createnode('Plan', 'Taiwan',                               date_create('2015-12-01'));
  whereare_createnode('Plan', 'Australia',                            date_create('2015-12-20'));
  whereare_createnode('Plan', 'New Zealand',                          date_create('2016-01-19'));
  whereare_createnode('Plan', 'Pacific Ocean',                        date_create('2016-03-01'));
  whereare_createnode('Plan', 'South America',                        date_create('2016-04-01'));
  whereare_createnode('Plan', 'Central America',                      date_create('2016-06-01'));
  whereare_createnode('Plan', 'Mexico',                               date_create('2016-08-01'));
  whereare_createnode('Plan', 'USA',                                  date_create('2016-09-01'));
  whereare_createnode('Plan', 'London, United Kingdom (Arrive home)', date_create('2016-10-09'));
  
  // Configure Permissions:
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content', 'access comments'));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content', 'access comments'));
}